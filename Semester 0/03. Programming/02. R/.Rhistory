a <- 'Amir'
a
typeof(a)
a <- 'Amir Ali'
typeof(a)
a <- "Amir"
typeof(a)
a <- 1241
a
a.b.c <- 124124
a.b.c
a_b_c = 'Amir Ali Cheema'
a_b_c
a <- 'Amir'
H_l
a <- 'Amir'
H_l = '124124124'
H_l
myName = "Amir Ali Cheema"
MyName = "Amir Ali Cheema"
my_name = "Amir Ali Cheema"
myName
.name = "Amir"
.name
a <- 'Amir'
a <- 'Amir'
H_l = 124124124
myName = "Amir Ali Cheema"
MyName = "Amir Ali Cheema"
my_name = "Amir Ali Cheema"
.name = "Amir"
a = 'Amir'
typeof(a)
b = 12312
typeof(b)
c = 1231L
typeof(c)
d  = 2 + 3i
typeof(d)
typeof(e)
e = TRUE
typeof(e)
# Variables
a <- 23423423432
myName = "Amir Ali Cheema"
MyName = "Amir Ali Cheema"
my_name = "Amir Ali Cheema"
name1 = "Amir"
# DataType
a = 'Amir'            # char
typeof(a)
b = 12312             # double
typeof(b)
c = 1231L             # int
typeof(c)
d  = 2 + 3i           # complex
typeof(d)
e = TRUE              # logical
typeof(e)
a = 213L
b = 231L
a+ b
1241+ 12341
1.2 + 35.2
12. 345
321.545.
234.124 + 2342.2342
a = 23L
b = 234L
a - b                # subtraction
a = 24L
b = 12L
a / b
a = 23
b = 23
a * b                # Multiplication
a = 11
b = 2
a %% b               # reminder
a = 32
a^2
a = 32L
a^2L
(2)2^2 - 2 +2 *2 /2
(2) + 2^2 - 2 +2 *2 /2
2 > 1
2 < 3
2 > 1
3 > 2
3 > 4
2 < 3
4 < 2
3 <= 3        # greater than equal to
3 <= 1
2 <= 5
3 == 2        # equal to
3 == 3
3 != 2
3 != 2        # Not equal to
4 != 4
1 ==1 or 1 > 2
1 ==1 | 1 > 2
2 > 3 & 2 > 1
1 > 2 | 1 != 1
4 > 2 & 3 > 2
!(5 > 2)
!(1 == 2)
print(a
)
a= 234234
print(a
)
a <- c(1, 3, 5, 7, 9)
a
a <- c('A', 'M', 'I', 'R')
a
a <- c(1, 3, 5, 7, 9)
a
b <- c('A', 'M', 'I', 'R')
b
mix_vector <- c(a, b)
print(mix_vector)
c < c(TRUE, FALSE)
c
c <- c(TRUE, FALSE)
c
typeof(a)
typeof(a)
class(a)
b <- c('A', 'M', 'I', 'R')
print(b)
typeof(b)
class(b)
mix_vector <- c(a, b)
print(mix_vector)
typeof(mix_vector)
c <- c(TRUE, FALSE)
typeof(c)
num <- 1:10
print(num)
num <- c(1:10, 10.5)
print(num)
num <- c(1:10.5)
print(num)
num <- c(1:10, 10.5)
print(num)
charr <- letters(1:10)
charr
charr = letters[1:10]
charr
fac = ac.factor(ltrs)
print(fac)
fac = ac.factor(charr)
print(fac)
fac = as.factor(charr)
print(fac)
x <- c('a', 1)
x
x <- C(1.5, TRUE)
print(x)
x <- C(1.5, TRUE)
print(x)
x <- C(2, TRUE)
print(x)
x <- C(2, TRUE)
print(x)
y <- C(2, TRUE)
print(y)
y <- c(1.5, TRUE)
print(y)
x <- 0:6
print(x)
as.numeric(x)
as.character(x)
as.logical(x)
as.complex(x)
return(max(v), min(v))
if (a > length(v)) {
print('argument too long')
}
MinMax <- function(v, a){
if (a > length(v)) {
print('argument too long')
}
}
v <- c(1, 3, 4, 65, 7)
MinMax(v, 6)
max(v)
min(v)
MinMax <- function(v, a){
x <- max(v)
y <- min(v)
return(x, y)
if (a > length(v)) {
print('argument too long')
}
return()
}
v <- c(1, 3, 4, 65, 7)
MinMax(v, 6)
return(z)
MinMax <- function(v, a){
x <- max(v)
y <- min(v)
z <- c(x, y)
return(z)
if (a > length(v)) {
print('argument too long')
}
return()
}
v <- c(1, 3, 4, 65, 7)
MinMax(v, 6)
MinMax <- function(v, a){
if (a > length(v)) {
print('argument too long')
}
x <- max(v)
y <- min(v)
z <- c(x, y)
return(z)
}
v <- c(1, 3, 4, 65, 7)
MinMax(v, 6)
MinMax <- function(v, a){
if (a > length(v)) {
print('argument too long')
}
else {
x <- max(v)
y <- min(v)
z <- c(x, y)
return(z)
}
}
v <- c(1, 3, 4, 65, 7)
MinMax(v, 6)
y <- min(v)
z <- c(x, y)
return(z)
MinMax <- function(v, a){
if (a > length(v)) {
print('argument too long')
}
else {
x <- max(v)
y <- min(v)
z <- c(x, y)
return(z)
}
}
v <- c(1, 3, 4, 65, 7)
MinMax(v, 4)
setwd("C:/Users/amira/Data Science/Semester 0/02. Programming/02. R")
data <- read.table('Dataset/data.txt')
data
data <- read.table('Dataset/data.txt', header = T)
data
data <- select(data, state, population)
data <- read.table('Dataset/data.txt', header = T)
data <- select(data, state, population)
data1 <- select(data, state, population)
# Barplot
library(dplyr)
data <- read.table('Dataset/data.txt', header = T)
data1 <- select(data, state, population)
data <- select(data, state, population)
data
barplot(data$population)
barplot(data$population, names.arg = data$state)
barplot(data$population, names.arg = data$state, xlab = 'State', ylab = 'Population', main = 'State vs Population', col = 'red' )
barplot(data$population, names.arg = data$state, xlab = 'State', ylab = 'Population', main = 'State vs Population', col = 'b' )
barplot(data$population, names.arg = data$state, xlab = 'State', ylab = 'Population', main = 'State vs Population', col = 'blue' )
# Barplot
library(dplyr)
data <- read.table('Dataset/data.txt', header = T)
data <- select(data, state, population)
data <- head(data, 5)
barplot(data$population, names.arg = data$state, xlab = 'State', ylab = 'Population', main = 'State vs Population', col = 'blue' )
# horizontal barplot
library(dplyr)
data <- read.table('Dataset/data.txt', header = T)
data <- select(data, state, population)
data <- head(data, 5)
barplot(data$population, names.arg = data$state, horiz = T, xlab = 'Population', ylab = 'Stat', main = 'State vs Population', col = 'blue' )
# Stack barplot
data
data <- read.table('Dataset/data.txt', header = T)
# Stack barplot
data
# Stack barplot
data <- read.csv('Dataset/apartments.csv')
# Stack barplot
data <- read.csv('Dataset/apartments.csv')
# Stack barplot
data <- read.csv('Dataset/apartments.csv', sep = ';')
data
head(data, 10)
# Stack Barplot
data <- read.csv('Dataset/apartments.csv', sep = ';')
head(data, 10)
data <- mutate(data, price = price/10000)
data
data <- mutate(data, price = price/1000)
data
# Stack Barplot
data <- read.csv('Dataset/apartments.csv', sep = ';')
data <- mutate(data, price = price/1000)
head(data, 10)
data <- data[c(1, 3, 4)]
data
data <- data[c(1, 3, 4)]
head(data, 10)
# Stack Barplot
data <- read.csv('Dataset/apartments.csv', sep = ';')
data <- mutate(data, price = price/1000)
data <- data[c(1, 3, 4)]
head(data, 10)
data <- data.matrix(data)
head(data, 10)
data <- t(data.matrix(data))
head(data, 10)
barplot(data, col = 1:3)
data <- head(data, 100)
barplot(data, col = 1:3)
data <- head(data, 100)
barplot(data, col = 1:3)
head(data, 10)
barplot(data, col = 1:3)
barplot(data, col = 1:3)
barplot(data, col = 2:3)
barplot(data, names.arg = data$state, col = 2:3)
barplot(data, names.arg = data$state, col = 2:3)
# Stack Barplot
data <- read.csv('Dataset/apartments.csv', sep = ';')
data <- mutate(data, price = price/1000)
data1 <- data[c(1, 3, 4)]
data <- t(data1.matrix(data))   # matrix with transpose
data <- head(data, 100)
barplot(data, names.arg = data1$state, col = 2:3)
barplot(data, col = 2:3, main = 'Price vs Area', legend('topleft', c('price', 'area'), fill = ('green', 'red')))
barplot(data, col = 2:3, main = 'Price vs Area', legend('topleft', c('price', 'area'), fill = c('green', 'red')))
# Stack Barplot
data <- read.csv('Dataset/apartments.csv', sep = ';')
data <- mutate(data, price = price/1000)
data1 <- data[c(1, 3, 4)]
data <- t(data1.matrix(data))   # matrix with transpose
data <- head(data, 10)
barplot(data, col = 2:3, main = 'Price vs Area', legend('topleft', c('price', 'area'), fill = c('green', 'red')))
# Histogram
data <- read.csv('Dataset/apartments.csv', sep = ';')
data
head(data, 10)
hist(data$area)
hist(data$area, col = 'blue', border = 'red')
hist(data$area, col = 'green', border = 'red')
hist(data$area, col = 'gray', border = 'red')
hist(data$area, col = 'gray', border = 'red', xlab = 'Area', main = 'Histogram of Area')
hist(data$area, col = 'gray', border = 'red', xlab = 'Area', main = 'Histogram of Area', breaks = 15)
hist(data$area, col = 'gray', border = 'red', xlab = 'Area', main = 'Histogram of Area', breaks = 20)
hist(data$area, col = 'gray', border = 'red', xlab = 'Area', main = 'Histogram of Area', breaks = 20)
hist(data$area, col = 'gray', border = 'red', xlab = 'Area', main = 'Histogram of Area')
hist(data$area, col = 'gray', border = 'red', xlab = 'Area', main = 'Histogram of Area', breaks = 40)
hist(data$area, col = 'gray', border = 'red', xlab = 'Area', main = 'Histogram of Area', breaks = 10)
# Scatter Plot
data("cars")
data
# Scatter Plot
data(cars)
cars <- cars
head(cars, 10)
plot(cars$speed, cars$dist)
plot(cars$speed, cars$dist, xlab = 'Speed', ylab = 'dist')
plot(cars$speed, cars$dist, xlab = 'Speed', ylab = 'Distance')
plot(cars$speed, cars$dist, xlab = 'Speed', ylab = 'Distance', main = 'Cars (Dist vs Speed)')
plot(cars$speed, cars$dist, xlab = 'Speed', ylab = 'Distance', main = 'Cars (Dist vs Speed)', col = 'red')
plot(cars$speed, cars$dist, xlab = 'Speed', ylab = 'Distance', main = 'Cars (Dist vs Speed)', col = 'red', pch = 10)
plot(cars$speed, cars$dist, xlab = 'Speed', ylab = 'Distance', main = 'Cars (Dist vs Speed)', col = 'red', pch = 10, type = 'l')
# Scatter Plot
data(cars)
cars <- cars
head(cars, 10)
plot(cars$speed, cars$dist, xlab = 'Speed', ylab = 'Distance', main = 'Cars (Dist vs Speed)', col = 'red', pch = 10)
# line Plot
data(cars)
cars <- cars
head(cars, 10)
plot(cars$speed, cars$dist, xlab = 'Speed', ylab = 'Distance', main = 'Cars (Dist vs Speed)', col = 'red', pch = 10, type = 'l') # line
# line Plot
data(cars)
cars <- cars
# Boxplot
data <- read.csv('Dataset/apartments.csv', sep = ';')
head(data, 10)
boxplot(data$area ~ data$rooms)
boxplot(data$area ~ data$rooms,
xlab = 'room',
ylab = 'area',
main = 'room vs area',
col = 'red',
border = 'blue')
boxplot(data$area ~ data$rooms,
xlab = 'room',
ylab = 'area',
main = 'room vs area',
col = 'red',
border = 'blue',
notch = T)
# Multiple Plots in Layout
par(mfrow = c(2, 2))
# Multiple Plots in Layout
par(mfrow = c(3, 2))
data <- read.table('Dataset/data.txt', header = T)
data <- select(data, state, population)
data <- head(data, 5)
barplot(data$population, names.arg = data$state, xlab = 'State', ylab = 'Population', main = 'State vs Population', col = 'blue' )
data <- read.csv('Dataset/apartments.csv', sep = ';')
hist(data$area, col = 'gray', border = 'red', xlab = 'Area', main = 'Histogram of Area', breaks = 10)
data(cars)
cars <- cars
head(cars, 10)
plot(cars$speed, cars$dist, xlab = 'Speed', ylab = 'Distance', main = 'Cars (Dist vs Speed)', col = 'red', pch = 10)
# Boxplot
data <- read.csv('Dataset/apartments.csv', sep = ';')
head(data, 10)
boxplot(data$area ~ data$rooms,
xlab = 'room',
ylab = 'area',
main = 'room vs area',
col = 'red',
border = 'blue',
notch = T)
# Multiple Plots in Layout
# Barplot
par(mfrow = c(2, 2))
data <- read.table('Dataset/data.txt', header = T)
data <- select(data, state, population)
data <- head(data, 5)
barplot(data$population, names.arg = data$state, xlab = 'State', ylab = 'Population', main = 'State vs Population', col = 'blue' )
# Histogram
data <- read.csv('Dataset/apartments.csv', sep = ';')
hist(data$area, col = 'gray', border = 'red', xlab = 'Area', main = 'Histogram of Area', breaks = 10)
# Scatter plot
data(cars)
cars <- cars
head(cars, 10)
plot(cars$speed, cars$dist, xlab = 'Speed', ylab = 'Distance', main = 'Cars (Dist vs Speed)', col = 'red', pch = 10)
# Boxplot
data <- read.csv('Dataset/apartments.csv', sep = ';')
head(data, 10)
boxplot(data$area ~ data$rooms,
xlab = 'room',
ylab = 'area',
main = 'room vs area',
col = 'red',
border = 'blue',
notch = T)
